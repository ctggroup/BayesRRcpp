// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// BayesRSamplerV2
void BayesRSamplerV2(std::string outputFile, int seed, int max_iterations, int burn_in, int thinning, Eigen::MatrixXd X, Eigen::VectorXd Y, double sigma0, double v0E, double s02E, double v0G, double s02G, Eigen::VectorXd cva);
RcppExport SEXP _BayesRRcpp_BayesRSamplerV2(SEXP outputFileSEXP, SEXP seedSEXP, SEXP max_iterationsSEXP, SEXP burn_inSEXP, SEXP thinningSEXP, SEXP XSEXP, SEXP YSEXP, SEXP sigma0SEXP, SEXP v0ESEXP, SEXP s02ESEXP, SEXP v0GSEXP, SEXP s02GSEXP, SEXP cvaSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type outputFile(outputFileSEXP);
    Rcpp::traits::input_parameter< int >::type seed(seedSEXP);
    Rcpp::traits::input_parameter< int >::type max_iterations(max_iterationsSEXP);
    Rcpp::traits::input_parameter< int >::type burn_in(burn_inSEXP);
    Rcpp::traits::input_parameter< int >::type thinning(thinningSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X(XSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type Y(YSEXP);
    Rcpp::traits::input_parameter< double >::type sigma0(sigma0SEXP);
    Rcpp::traits::input_parameter< double >::type v0E(v0ESEXP);
    Rcpp::traits::input_parameter< double >::type s02E(s02ESEXP);
    Rcpp::traits::input_parameter< double >::type v0G(v0GSEXP);
    Rcpp::traits::input_parameter< double >::type s02G(s02GSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type cva(cvaSEXP);
    BayesRSamplerV2(outputFile, seed, max_iterations, burn_in, thinning, X, Y, sigma0, v0E, s02E, v0G, s02G, cva);
    return R_NilValue;
END_RCPP
}
// BayesRSamplerV2Groups
void BayesRSamplerV2Groups(std::string outputFile, int seed, int max_iterations, int burn_in, int thinning, Eigen::MatrixXd X, Eigen::VectorXd Y, double sigma0, double v0E, double s02E, double v0G, double s02G, Eigen::MatrixXd cva, int groups, Eigen::VectorXi gAssign);
RcppExport SEXP _BayesRRcpp_BayesRSamplerV2Groups(SEXP outputFileSEXP, SEXP seedSEXP, SEXP max_iterationsSEXP, SEXP burn_inSEXP, SEXP thinningSEXP, SEXP XSEXP, SEXP YSEXP, SEXP sigma0SEXP, SEXP v0ESEXP, SEXP s02ESEXP, SEXP v0GSEXP, SEXP s02GSEXP, SEXP cvaSEXP, SEXP groupsSEXP, SEXP gAssignSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type outputFile(outputFileSEXP);
    Rcpp::traits::input_parameter< int >::type seed(seedSEXP);
    Rcpp::traits::input_parameter< int >::type max_iterations(max_iterationsSEXP);
    Rcpp::traits::input_parameter< int >::type burn_in(burn_inSEXP);
    Rcpp::traits::input_parameter< int >::type thinning(thinningSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X(XSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type Y(YSEXP);
    Rcpp::traits::input_parameter< double >::type sigma0(sigma0SEXP);
    Rcpp::traits::input_parameter< double >::type v0E(v0ESEXP);
    Rcpp::traits::input_parameter< double >::type s02E(s02ESEXP);
    Rcpp::traits::input_parameter< double >::type v0G(v0GSEXP);
    Rcpp::traits::input_parameter< double >::type s02G(s02GSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type cva(cvaSEXP);
    Rcpp::traits::input_parameter< int >::type groups(groupsSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXi >::type gAssign(gAssignSEXP);
    BayesRSamplerV2Groups(outputFile, seed, max_iterations, burn_in, thinning, X, Y, sigma0, v0E, s02E, v0G, s02G, cva, groups, gAssign);
    return R_NilValue;
END_RCPP
}
// BRV2Grstart
void BRV2Grstart(std::string outputFile, int seed, int max_iterations, int burn_in, int thinning, double mu, Eigen::MatrixXd beta, double sigmaE, Eigen::VectorXd sigmaGG, Eigen::MatrixXd X, Eigen::VectorXd epsilon, Eigen::VectorXd components, double sigma0, double v0E, double s02E, double v0G, double s02G, Eigen::MatrixXd cva, int groups, Eigen::VectorXi gAssign);
RcppExport SEXP _BayesRRcpp_BRV2Grstart(SEXP outputFileSEXP, SEXP seedSEXP, SEXP max_iterationsSEXP, SEXP burn_inSEXP, SEXP thinningSEXP, SEXP muSEXP, SEXP betaSEXP, SEXP sigmaESEXP, SEXP sigmaGGSEXP, SEXP XSEXP, SEXP epsilonSEXP, SEXP componentsSEXP, SEXP sigma0SEXP, SEXP v0ESEXP, SEXP s02ESEXP, SEXP v0GSEXP, SEXP s02GSEXP, SEXP cvaSEXP, SEXP groupsSEXP, SEXP gAssignSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type outputFile(outputFileSEXP);
    Rcpp::traits::input_parameter< int >::type seed(seedSEXP);
    Rcpp::traits::input_parameter< int >::type max_iterations(max_iterationsSEXP);
    Rcpp::traits::input_parameter< int >::type burn_in(burn_inSEXP);
    Rcpp::traits::input_parameter< int >::type thinning(thinningSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type sigmaE(sigmaESEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type sigmaGG(sigmaGGSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X(XSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type components(componentsSEXP);
    Rcpp::traits::input_parameter< double >::type sigma0(sigma0SEXP);
    Rcpp::traits::input_parameter< double >::type v0E(v0ESEXP);
    Rcpp::traits::input_parameter< double >::type s02E(s02ESEXP);
    Rcpp::traits::input_parameter< double >::type v0G(v0GSEXP);
    Rcpp::traits::input_parameter< double >::type s02G(s02GSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type cva(cvaSEXP);
    Rcpp::traits::input_parameter< int >::type groups(groupsSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXi >::type gAssign(gAssignSEXP);
    BRV2Grstart(outputFile, seed, max_iterations, burn_in, thinning, mu, beta, sigmaE, sigmaGG, X, epsilon, components, sigma0, v0E, s02E, v0G, s02G, cva, groups, gAssign);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_BayesRRcpp_BayesRSamplerV2", (DL_FUNC) &_BayesRRcpp_BayesRSamplerV2, 13},
    {"_BayesRRcpp_BayesRSamplerV2Groups", (DL_FUNC) &_BayesRRcpp_BayesRSamplerV2Groups, 15},
    {"_BayesRRcpp_BRV2Grstart", (DL_FUNC) &_BayesRRcpp_BRV2Grstart, 20},
    {NULL, NULL, 0}
};

RcppExport void R_init_BayesRRcpp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
